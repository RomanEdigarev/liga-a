{"version":3,"sources":["globalStyles.ts","components/Posts/Posts.elemets.ts","components/Posts/Pagination.tsx","components/Posts/Posts.tsx","lib/lib.ts","api/api.ts","components/Search/Search.elements.ts","components/Search/Search.tsx","App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","Container","styled","div","Post","image","Content","Author","span","Wrapper","Title","h1","Text","p","Button","button","Pagination","currentPage","pagesCount","prevPage","nextPage","aria-label","className","onClick","disabled","aria-current","href","Posts","posts","users","useState","setCurrentPage","array","pageSize","startIndex","lastIndex","currentArray","slice","Math","ceil","length","pagination","currentPosts","map","post","currentUser","find","user","id","userId","name","username","title","body","window","scrollTo","instance","axios","create","baseURL","headers","Accept","getPosts","a","get","then","data","images","index","download_url","catch","Error","getUsers","SearchContainer","SearchLabel","label","SearchInput","input","Search","setFilter","onChange","e","currentTarget","value","toLowerCase","App","loading","setState","filter","filteredPosts","includes","useEffect","fetching","displayLoading","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcdcfb69.chunk.js","sourcesContent":["import {createGlobalStyle} from 'styled-components'\r\n\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: 'Open Sans', sans-serif;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  body {\r\n    width: 1400px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n  }\r\n`;\r\n","import styled from 'styled-components'\r\n\r\n\r\nexport const Container = styled.div`\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`\r\n\r\nexport const Post = styled.div<{image: string}>`\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 8px;\r\n  box-shadow: 0px 0px 5px 1px rgba(0, 0, 0, .3);\r\n  width: 70%;\r\n  min-height: 300px;\r\n  position: relative;\r\n  background-image: url(${({image}) => image});\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const Content = styled.div`\r\n  padding: 10px;\r\n  background-color: white;\r\n  width: 100%;\r\n  position: absolute;\r\n  bottom: 0;\r\n  transform: translateY(100px);\r\n  transition: all ease-in-out 0.3s;\r\n\r\n  :hover {\r\n    transform: translateY(0);\r\n  }\r\n`\r\n\r\nexport const Author = styled.span`\r\n  font-size: 10px;\r\n  font-weight: 600;\r\n`\r\n\r\nexport const Wrapper = styled.div`\r\n  transition: all ease-in-out 0.3s;\r\n`\r\n\r\nexport const Title = styled.h1`\r\n  margin-top: 10px;\r\n  margin-bottom: 20px;\r\n  font-size: 26px;\r\n  font-weight: 300;\r\n  color: gray;\r\n`\r\n\r\nexport const Text = styled.p`\r\n  margin-bottom: 20px;\r\n`\r\n\r\nexport const Button = styled.button`\r\n  padding: 5px 10px;\r\n  border-radius: 4px;\r\n  color: #fff;\r\n  border: none;\r\n  outline: none;\r\n  background-color: #0c0cfd;\r\n  text-decoration: none;\r\n  transition: all 0.3s ease-in-out;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    text-decoration: underline;\r\n    background-color: #060680;\r\n  }\r\n`\r\n\r\n\r\n\r\n","import React, {FC} from 'react';\r\n\r\ntype Props = {\r\n    currentPage: number\r\n    pagesCount: number\r\n    prevPage: () => void\r\n    nextPage: () => void\r\n}\r\nexport const Pagination: FC<Props> = ({currentPage, pagesCount, prevPage, nextPage}) => {\r\n    return (\r\n        <div>\r\n            <nav aria-label=\"...\">\r\n                <ul className=\"pagination\">\r\n                    <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\r\n                        <button className=\"page-link\" onClick={prevPage} disabled={currentPage === 1}>Previous\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"page-item active\" aria-current=\"page\">\r\n                        <a className=\"page-link\" href={'#'}>{currentPage}</a>\r\n                    </li>\r\n                    <li className={`page-item ${currentPage === pagesCount ? 'disabled' : ''}`}>\r\n                        <button className=\"page-link\" onClick={nextPage}\r\n                                disabled={currentPage === pagesCount}>Next\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n","import React, {FC, useState} from 'react';\r\nimport {Author, Button, Container, Content, Post, Text, Title, Wrapper} from './Posts.elemets';\r\nimport {PostType, UserType} from \"../../types/types\";\r\nimport {pagination} from \"../../lib/lib\";\r\nimport {Pagination} from \"./Pagination\";\r\n\r\ntype Props = {\r\n    users: UserType[] | null\r\n    posts: PostType[] | null\r\n}\r\n\r\nexport const Posts: FC<Props> = ({posts, users}) => {\r\n    const [currentPage, setCurrentPage] = useState<number>(1)\r\n\r\n    const {currentArray: currentPosts, pagesCount} = pagination<PostType>(posts!, currentPage)\r\n\r\n    const nextPage = () => {\r\n        setCurrentPage(currentPage + 1)\r\n        window.scrollTo(0, 0)\r\n    }\r\n\r\n    const prevPage = () => {\r\n        setCurrentPage(currentPage - 1)\r\n        window.scrollTo(0, 0)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                currentPosts?.map(post => {\r\n                    const currentUser = users?.find(user => user.id === post.userId)\r\n                    return (\r\n                        <Post key={post.id} image={post.image!}>\r\n                            <Content>\r\n                                <Author>{`${currentUser?.name} @${currentUser?.username}`}</Author>\r\n                                <Title>{post.title}</Title>\r\n                                <Wrapper>\r\n                                    <Text>{post.body}</Text>\r\n                                    <Button>Подробнее</Button>\r\n                                </Wrapper>\r\n                            </Content>\r\n                        </Post>\r\n                    )\r\n                })\r\n            }\r\n\r\n            <Pagination currentPage={currentPage} nextPage={nextPage} prevPage={prevPage} pagesCount={pagesCount}/>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\n\r\n","export const pagination = <T>(array: T[], currentPage: number = 1, pageSize: number = 5) => {\r\n    const startIndex = (currentPage * pageSize) - pageSize\r\n    const lastIndex = currentPage * pageSize - 1\r\n    const currentArray = array.slice(startIndex, lastIndex)\r\n    const pagesCount = Math.ceil(array.length / pageSize)\r\n    return {currentArray, pagesCount}\r\n}\r\n","import axios from \"axios\";\r\nimport {Images, PostType, UserType} from \"../types/types\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com/',\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n    },\r\n})\r\n\r\nexport const getPosts = async () : Promise<PostType[]> => {\r\n    const images: Images[] = await axios.get<Images[]>('https://picsum.photos/v2/list?limit=100')\r\n         .then(({data}) => data)\r\n    const posts: PostType[] = await instance.get<PostType[]>('posts')\r\n        .then(({data}) => data.map((post, index) => ({...post, image: images[index].download_url})))\r\n        .catch(() => {\r\n            throw new Error('ошибка')\r\n        })\r\n    return posts\r\n}\r\n\r\nexport const getUsers = async () : Promise<UserType[]> => {\r\n    const users = await instance.get<UserType[]>('users')\r\n        .then(({data}) => data)\r\n        .catch(() => {\r\n            throw new Error('ошибка')\r\n        })\r\n    return users\r\n}\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const SearchContainer = styled.div`\r\n  margin: 0 auto;\r\n  width: 200px;\r\n`\r\nexport const SearchLabel = styled.label``\r\n\r\nexport const SearchInput = styled.input``","import React, {Dispatch, FC} from 'react';\r\nimport {SearchContainer, SearchLabel, SearchInput} from './Search.elements'\r\n\r\ntype Props = {\r\n    setFilter: Dispatch<string>\r\n}\r\nconst Search : FC<Props> = ({setFilter}) => {\r\n\r\n    return (\r\n        <SearchContainer>\r\n            <SearchLabel className={'form-label'}>Фильтр</SearchLabel>\r\n            <SearchInput className={'form-control'} id={'searchInput'} onChange={(e) => setFilter(e.currentTarget.value.toLowerCase())}/>\r\n        </SearchContainer>\r\n    );\r\n};\r\n\r\nexport default Search;","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {GlobalStyle} from './globalStyles'\nimport {Posts} from './components/Posts/Posts'\nimport {PostType, UserType} from \"./types/types\";\nimport {getPosts, getUsers} from \"./api/api\";\nimport Search from \"./components/Search/Search\";\n\ntype State = {\n    posts: PostType[] | null\n    loading: boolean\n    users: UserType[] | null\n}\n\nfunction App() {\n    const [{users, posts, loading}, setState] = useState<State>({posts: null, loading: true, users: null})\n    const [filter, setFilter] = useState<string | null>(null)\n    const filteredPosts = filter ? posts!.filter(post => post.title.toLowerCase().includes(filter)) : posts\n\n\n    useEffect(() => {\n        const fetching = async () => {\n            const users = await getUsers()\n            const posts = await getPosts()\n            setState({users, posts, loading: false})\n        }\n\n        fetching()\n    }, [])\n\n    const displayLoading = <div>Loading...</div>\n\n    return (\n        <>\n            {\n                loading ? displayLoading :\n                    <>\n                        <GlobalStyle/>\n                        <Search setFilter={setFilter}/>\n                        <Posts posts={filteredPosts} users={users}/>\n                    </>\n            }\n        </>\n\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}